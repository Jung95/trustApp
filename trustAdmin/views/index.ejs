<!DOCTYPE html>
<html lang="ko" class="">
<% include header.ejs %>

<body>
  <div id="app">
    <% include nav/top.ejs %>
    <% include nav/side.ejs %>
    <section class="is-hero-bar">
      <div class="flex flex-col md:flex-row items-center justify-between space-y-6 md:space-y-0">
        <h1 class="title">
          Dashboard
        </h1>
      </div>
    </section>

    <section class="section main-section">
      <div class="grid gap-6 grid-cols-1 md:grid-cols-3 mb-6">
        <div class="card">
          <div class="card-content">
            <div class="flex items-center justify-between">
              <div class="widget-label">
                <h3>
                  자산
                </h3>
                <h1 id="total">
                  로딩중
                </h1>
              </div>
              <span class="icon widget-icon text-red-500"><i class="mdi mdi-cash mdi-48px"></i></span>
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-content">
            <div class="flex items-center justify-between">
              <div class="widget-label">
                <h3>
                  수익금
                </h3>
                <h1 id="profit">
                  로딩중
                </h1>
              </div>
              <span class="icon widget-icon text-black-500"><i class="mdi mdi-bank-plus mdi-48px"></i></span>
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-content">
            <div class="flex items-center justify-between">
              <div class="widget-label">
                <h3>
                  수익률
                </h3>
                <h1 id="rate">
                  로딩중
                </h1>
              </div>
              <span class="icon widget-icon text-red-500"><i class="mdi mdi-finance mdi-48px"></i></span>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card-content">
            <div class="flex items-center justify-between">
              <div class="widget-label">
                <h3>
                  투자원금
                </h3>
                <h1 id="principal">
                  로딩중
                </h1>
              </div>
              <span class="icon widget-icon text-green-500"><i class="mdi mdi-cash mdi-48px"></i></span>
            </div>
          </div>
        </div>
      </div>

      <div class="card mb-6">
        <header class="card-header">
          <p class="card-header-title">
            <span class="icon"><i class="mdi mdi-finance"></i></span>
            Performance
          </p>
          <a href="#" class="card-header-icon">
            <span class="icon"><i class="mdi mdi-reload"></i></span>
          </a>
        </header>
        <div class="card-content">
          <div class="chart-area">
            <div class="h-full">
              <div class="chartjs-size-monitor">
                <div class="chartjs-size-monitor-expand">
                  <div></div>
                </div>
                <div class="chartjs-size-monitor-shrink">
                  <div></div>
                </div>
              </div>
              <span id="chart-loading">
                <img src="/img/loading.gif" alt="loading">
              </span>
              <canvas id="big-line-chart" width="2992" height="1000" class="chartjs-render-monitor block"
                style="height: 400px; width: 1197px;"></canvas>
            </div>
          </div>
        </div>
      </div>

      <div class="card has-table">
        <header class="card-header">
          <p class="card-header-title">
            <span class="icon"><i class="mdi mdi-account-multiple"></i></span>
            Clients
          </p>
          <a href="#" class="card-header-icon">
            <span class="icon"><i class="mdi mdi-reload"></i></span>
          </a>
        </header>
        <div class="card-content">
          <table>
            <thead>
              <tr>
                <th></th>
                <th>이름</th>
                <th>수익률</th>
                <th>자산</th>
                <th>투자원금</th>
                <th>지분</th>
              </tr>
            </thead>
            <tbody id="rows">

            </tbody>
          </table>
          <!-- not use yet
        <div class="table-pagination">
          <div class="flex items-center justify-between">
            <div class="buttons">
              <button type="button" class="button active">1</button>
              <button type="button" class="button">2</button>
              <button type="button" class="button">3</button>
            </div>
            <small>Page 1 of 3</small>
          </div>
        </div>
        -->
        </div>
      </div>
    </section>
    <% include footer.ejs %>
  </div>

  <!-- Scripts below are for demo only -->
  <script type="text/javascript" src="js/main.js?v=1635129225704"></script>

  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"></script>
  <script>
    $("document").ready(async function () {
      $("#big-line-chart").hide();
      let share = await getMyAsset();
      let asset = await getUsedAsset();
      share = share['share'];
      asset = asset['asset']['asset'];
      let profit = (asset * share['share'] - share['principal'])
      let rate = ((profit / share['principal']) * 100).toLocaleString('ko-KR')
      let principal = share['principal'].toLocaleString('ko-KR', {
        maximumFractionDigits: 0
      })
      $("#profit").text(profit.toLocaleString('ko-KR', {
        maximumFractionDigits: 0
      }) + "₩")
      $("#rate").text(rate + "%")
      $("#principal").text(principal + "₩")
      $("#total").text((asset * share['share']).toLocaleString('ko-KR', {
        maximumFractionDigits: 0
      })+ "₩")
      getChart();

      let clientAsset = await getClientAsset();
      clientAsset['list'].forEach(client => {
        $("#rows").append(makeRow(client['email'], asset, client['principal'], client['share']))
      });

     
    })

    function makeRow(nickname, asset, principal, share) {
      let profit;
      let capital;
      if (principal == null) {
        principal = "비공개"
        profit = "비공개"
      } else {
        profit = (((share * asset) / principal - 1) * 100).toLocaleString("ko-KR", {
          maximumFractionDigits: 2
        }) + "%"
        principal = principal.toLocaleString("ko-KR", {
          maximumFractionDigits: 0
        }) + "₩"

      }
      if (share == null) {
        share = "비공개"
        capital = "비공개"
        profit = "비공개"
      } else {
        capital = (share * asset).toLocaleString("ko-KR", {
          maximumFractionDigits: 0
        }) + "₩"
        share = (share * 100).toFixed(3) + "%"

      }
      let result = ""
      result += "<tr>";
      result += " <td class=\"image-cell\">"
      result += "<div class=\"image\">"
      result += "<img src=\"https://avatars.dicebear.com/v2/initials/" + nickname + ".svg\" class=\"rounded-full\">"
      result += "</div>"
      result += "</td>"
      result += "<td data-label=\"닉네임\">" + nickname + "</td>"
      result += "<td data-label=\"수익률\">" + profit + "</td>"
      result += "<td data-label=\"자산\">" + capital + "</td>"
      result += "<td data-label=\"투자원금\">" + principal + "</td>"
      result += "<td data-label=\"지분\">" + share + "</td>"
      result += "</tr>"
      return result;
    }
    const getUsedAsset = function () {
      return new Promise((resolve, reject) => { // 1.
        let token = $.cookie('user');
        let data = {
          "token": token
        }
        jQuery.ajax({
          type: "GET",
          url: "asset/used",
          dataType: "json",
          data: data,
          success: (res) => {
            resolve(res); // 2.
          },
          error: (e) => {
            reject(e); // 3.
          }
        });
      });
    }
    const getMyAsset = function () {
      return new Promise((resolve, reject) => { // 1.
        let token = $.cookie('user');
        let data = {
          "token": token
        }
        jQuery.ajax({
          type: "GET",
          url: "asset/my",
          dataType: "json",
          data: data,
          success: (res) => {
            resolve(res); // 2.
          },
          error: (e) => {
            reject(e); // 3.
          }
        });
      });
    }

    const getClientAsset = function () {
      return new Promise((resolve, reject) => { // 1.
        let token = $.cookie('user');
        let data = {
          "token": token
        }
        jQuery.ajax({
          type: "GET",
          url: "user/dashboard",
          dataType: "json",
          data: data,
          success: (res) => {
            resolve(res); // 2.
          },
          error: (e) => {
            reject(e); // 3.
          }
        });
      });
    }

    function getChart() {
      let token = $.cookie('user');
      let data = {
        "token": token
      }
      jQuery.ajax({
        type: "GET",
        url: "asset/chart",
        dataType: "json",
        data: data,
        success: function (response) {
          $("#chart-loading").hide();
          $("#big-line-chart").show();
          var chartColors = {
            "default": {
              primary: '#00D1B2',
              info: '#209CEE',
              danger: '#FF3860'
            }
          };
          var ctx = document.getElementById('big-line-chart').getContext('2d');
          new Chart(ctx, {
            type: 'line',
            data: {
              datasets: [{
                fill: false,
                borderColor: chartColors["default"].primary,
                borderWidth: 2,
                borderDash: [],
                borderDashOffset: 0.0,
                pointBackgroundColor: chartColors["default"].primary,
                pointBorderColor: 'rgba(255,255,255,0)',
                pointHoverBackgroundColor: chartColors["default"].primary,
                pointBorderWidth: 20,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 15,
                pointRadius: 4,
                data: response['capitals'].reverse()
              }],
              labels: response['dates'].reverse()
            },
            options: {
              maintainAspectRatio: false,
              legend: {
                display: false
              },
              responsive: true,
              tooltips: {
                backgroundColor: '#f5f5f5',
                titleFontColor: '#333',
                bodyFontColor: '#666',
                bodySpacing: 4,
                xPadding: 12,
                mode: 'nearest',
                intersect: 0,
                position: 'nearest'
              },
              scales: {
                yAxes: [{
                  barPercentage: 1.6,
                  gridLines: {
                    drawBorder: false,
                    color: 'rgba(29,140,248,0.0)',
                    zeroLineColor: 'transparent'
                  },
                  ticks: {
                    padding: 20,
                    fontColor: '#9a9a9a'
                  }
                }],
                xAxes: [{
                  barPercentage: 1.6,
                  gridLines: {
                    drawBorder: false,
                    color: 'rgba(225,78,202,0.1)',
                    zeroLineColor: 'transparent'
                  },
                  ticks: {
                    padding: 20,
                    fontColor: '#9a9a9a'
                  }
                }]
              }
            }
          });
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alert(xhr.status);
          alert(thrownError);
        }
      });
    }
  </script>

  <script>
    "use strict";
  </script>
  <!-- Icons below are for demo only. Feel free to use any icon pack. Docs: https://bulma.io/documentation/elements/icon/ -->
  <link rel="stylesheet" href="https://cdn.materialdesignicons.com/4.9.95/css/materialdesignicons.min.css">

</body>

</html>